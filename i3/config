# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Agave Nerd Font Bold Regular 12

# No titles
for_window [class=".*"] title_format " "
for_window [class=".*"] border none

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status

bindsym XF86AudioRaiseVolume    exec --no-startup-id pactl set-sink-volume  @DEFAULT_SINK@      +10%    && $refresh_i3status
bindsym XF86AudioLowerVolume    exec --no-startup-id pactl set-sink-volume  @DEFAULT_SINK@      -10%    && $refresh_i3status
bindsym XF86AudioMute           exec --no-startup-id pactl set-sink-mute    @DEFAULT_SINK@      toggle  && $refresh_i3status
bindsym XF86AudioMicMute        exec --no-startup-id pactl set-source-mute  @DEFAULT_SOURCE@    toggle  && $refresh_i3status
# bindsym XF86KbdBrightnessDown   exec --no-startup-id
# bindsym XF86KbdBrightnessUp     exec --no-startup-id
bindsym XF86AudioPlay           exec --no-startup-id dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindsym XF86AudioPrev           exec --no-startup-id dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
bindsym Print                   exec --no-startup-id scrot ~/screenshots/%b%d::%H%M%S.png --line mode=edge -e 'xclip -selection clipboard -t image/png -i $f'
bindsym --release Shift+$mod+s  exec --no-startup-id scrot ~/screenshots/%b%d::%H%M%S.png -s --line mode=edge -e 'xclip -selection clipboard -t image/png -i $f'

exec_always setxkbmap -model pc105 -rules evdev -layout us,ru -option terminate:ctrl_alt_bksp,grp_led:scroll
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# s=selected, n=other
# bindsym $mod+d exec --no-startup-id dmenu_run -nb '#1E2326' -nf '#D3C6AA' -sb '#D3C6AA' -sf '#1E2326' -fn "Agave Nerd Font Mono"
bindsym $mod+d exec --no-startup-id dmenu_run -nb '#1E2326' -nf '#D3C699' -sb '#D3C699' -sf '#1E2326' -fn "scientifica"

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h      focus left
bindsym $mod+j      focus down
bindsym $mod+k      focus up
bindsym $mod+l      focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left   focus left
bindsym $mod+Down   focus down
bindsym $mod+Up     focus up
bindsym $mod+Right  focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1 >txt"
set $ws2 "2 >web"
set $ws3 "3 >fm"
set $ws4 "4 >prog"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8 >sptf"
set $ws9 "9 >tg"
set $ws10 "10"

# Unity not refresh window fix
set $unity-refresh exec i3-msg [class="Unity"] fullscreen toggle; exec i3-msg [class="Unity"] fullscreen toggle

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4; $unity-refresh
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Python interpreter instance
bindsym $mod+c exec "python /home/stanik/scripts/leviPyCalc.py"
# Vim note instance
bindsym $mod+n exec "python /home/stanik/scripts/newVimNote.py"


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    # status_command i3status -c ~/.config/i3status/i3status.conf
    status_command i3status -c /home/stanik/.config/i3status/i3status.conf | /home/stanik/scripts/i3/i3lang.sh i3status
    # font pango: Agave Nerd Font Bold 12
    font pango: scientifica Regular 14
	# bindsym button1 nop
	# bindsym --release button3 exec --no-startup-id import /tmp/latest-screenshot.png
	i3bar_command i3bar
	separator_symbol " :: "

    # Disabel bar workspaces scrolling
    bindsym button4 nop
    bindsym button5 nop

	colors {
        background #1E2326
        statusline #D3C699
        separator  #7A8478

        focused_workspace  #9DA9A0 #D3C699 #000000
        active_workspace   #333333 #5f676a #ffffff
        inactive_workspace #333333 #222222 #888888
        urgent_workspace   #2f343a #900000 #ffffff
        binding_mode       #2f343a #900000 #ffffff
    }
}

# Color
# class                 border  backgr. text    indicator child_border
client.focused          #9DA9A0 #D3C6AA #000000 #D3C6AA   #859289
client.focused_inactive #333333 #5f676a #ffffff #000000   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #000000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #000000

# Assign Programs to Workspaces
for_window [class="firefox"] move to workspace $ws2
for_window [class="Thunar"] move to workspace $ws3
for_window [class="unity"] move to workspace $ws4
for_window [class="Spotify"] move to workspace $ws8
for_window [class="TelegramDesktop"] move to workspace $ws9


# Gaps
# Inner gaps for all windows: space between two adjacent windows (or split containers)
gaps inner 10

smart_gaps on
# for_window [class="Alacritty"] smart_gaps inverse_outer

# When you are in fullscreen mode, some applications still open popup windows (take Xpdf for example).
# This is because these applications might not be aware that they are in fullscreen mode (they do not check the corresponding hint).
popup_during_fullscreen smart

# Load custom script when switch to workspace
# exec /home/stanik/scripts/

# Window compositor
exec_always picom

# Automatic tiling (2 columns only)
# [1] [2]
# [4] [3]
# [n] [m]
# auto layout for i3 containers
exec_always python ~/scripts/autoLayout.py

# Setup wallpaper
# exec xwallpaper --stretch ~/Pictures/wallpaper/eva01_pixel_small
